<!--
//*********************************************************
//
// Copyright (c) Microsoft. All rights reserved.
// THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
// ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
// IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
// PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
//
//*********************************************************
-->
<common:LayoutAwarePage
    x:Class="simpleInk.Scenario1"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:simpleInk"
    xmlns:common="using:SDKTemplate.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid x:Name="LayoutRoot" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.Resources>
            <Style x:Key="ColorButtonStyle"  TargetType="Button">
                <Setter Property="MinWidth" Value="28"/>
                <Setter Property="MinHeight" Value="28"/>
                <Setter Property="Width" Value="28"/>
                <Setter Property="Height" Value="28"/>
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="FontSize" Value="0"/>
                <Setter Property="Padding" Value="0,0,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid Background="Transparent">
                                <Grid Background="Transparent">
                                    <Border x:Name="ColorButtonOuterBorder"
                                        BorderThickness="1"
                                        BorderBrush="Orange"
                                        Background="Transparent">
                                        <Border
                                            BorderBrush="LightGray"
                                            BorderThickness="1"
                                            Background="{TemplateBinding Background}"/>
                                    </Border>
                                </Grid>

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColorButtonOuterBorder" Storyboard.TargetProperty="BorderThickness">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed"/>
                                        <VisualState x:Name="Disabled"/>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ColorButtonOuterBorder" Storyboard.TargetProperty="BorderThickness">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="2"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid x:Name="Input" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="40"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="110"/>
                <ColumnDefinition Width="140"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <ScrollViewer x:Name="DescriptionScrollViewer"
                          Grid.Row="0" Grid.Column="1" Grid.RowSpan="2" Grid.ColumnSpan="3"
                          HorizontalScrollBarVisibility="Auto"
                          VerticalScrollBarVisibility="Auto"
                          HorizontalAlignment="Left"
                          Width="515" Height="100"
                          Margin="0,0,0,5">
                <StackPanel x:Name="DescriptionPanel" HorizontalAlignment="Left" Width="500">
                    <TextBlock  Style="{StaticResource BasicTextStyle}" TextWrapping="Wrap">
                        This scenario demonstrates how to use inking and recognition APIs, and how to render ink with XAML.<LineBreak/>
                        - To ink, use pen or mouse with left button pressed.<LineBreak/>
                        - To erase ink strokes, use the back of the pen, or pen with secondary button pressed, or mouse with right button pressed.<LineBreak/>
                        - To select strokes, draw a lasso around the ink strokes using the pen with barrel button pressed or CTRL + mouse with left button pressed.<LineBreak/>
                        - To move selected ink use your finger.<LineBreak/>
                        - To load/save, cut/copy/paste, change properties, and reco ink, select the appropriate option below.<LineBreak/>
                    </TextBlock>
                </StackPanel>
            </ScrollViewer>

            <!-- Pen thickness -->
            <TextBlock Text="Pen thickness:" 
                       Grid.Row="2" Grid.Column="1"
                       Style="{StaticResource BasicTextStyle}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,10"/>
            <ComboBox x:Name="PenThickness"
                    Grid.Row="2" Grid.Column="2"                                     
                    HorizontalAlignment="Left" VerticalAlignment="Top"
                    Width="122" Height="24" 
                    Margin="0,8"
                    SelectedIndex="1"
                    SelectionChanged="OnPenThicknessChanged">
                <ComboBoxItem Content="Smallest"/>
                <ComboBoxItem Content="Small"/>
                <ComboBoxItem Content="Medium"/>
                <ComboBoxItem Content="Large"/>
                <ComboBoxItem Content="Largest"/>
            </ComboBox>

            <!-- Pen color -->
            <TextBlock Text="Color:"
                       Grid.Row="3" Grid.Column="1" Style="{StaticResource BasicTextStyle}"
                       HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5"/>
            <StackPanel Grid.Row="3" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,2" >
                <Button Background="Red"    Foreground="Red"    Click="OnPenColorChanged" Style="{StaticResource ColorButtonStyle}" Margin="0,0,3,0"/>
                <Button Background="Green"  Foreground="Green"  Click="OnPenColorChanged" Style="{StaticResource ColorButtonStyle}" Margin="0,0,3,0"/>
                <Button Background="Blue"   Foreground="Blue"   Click="OnPenColorChanged" Style="{StaticResource ColorButtonStyle}" Margin="0,0,3,0"/>
                <Button Background="Yellow" Foreground="Yellow" Click="OnPenColorChanged" Style="{StaticResource ColorButtonStyle}" Margin="0,0,3,0"/>
            </StackPanel>

            <!-- Button panel -->
            <StackPanel x:Name="ButtonPanel" Grid.Row="2" Grid.Column="3" Grid.RowSpan="2" Orientation="Vertical" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,5">
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0" HorizontalAlignment="Left">
                    <Button Content="Clear" Width="65" Margin="0,0,3,0" Click="OnClear" ToolTipService.ToolTip=""/>
                    <Button Content="Cut"   Width="65" Margin="0,0,3,0" Click="OnCut"/>
                    <Button Content="Copy"  Width="65" Margin="0,0,3,0" Click="OnCopy" />
                    <Button Content="Paste" Width="65" Margin="0,0,3,0" Click="OnPaste"/>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Margin="0,0,0,0" HorizontalAlignment="Left">
                    <Button Content="Load"      Width="65"  Margin="0,0,3,0" Click="OnLoad"/>
                    <Button Content="Save"      Width="65"  Margin="0,0,3,0" Click="OnSave"/>
                    <Button Content="Recognize" Width="133" Margin="0,0,3,0" Click="OnRecognize"/>
                </StackPanel>
            </StackPanel>
            <WebView Source="http://www.bing.com" x:Name="WebViewRightTop" Grid.Column="3" HorizontalAlignment="Left" Height="140" Margin="483,40,0,0" VerticalAlignment="Top" Width="519" Grid.RowSpan="3"/>
            <RepeatButton Click="bkcli" x:Name="repeatButton" Content="back" Grid.Column="3" HorizontalAlignment="Left" Height="100" Margin="480,72,0,0" Grid.Row="2" VerticalAlignment="Top"/>
            <RepeatButton Click="fwcli" x:Name="repeatButton1" Content="frwrd" Grid.Column="3" HorizontalAlignment="Left" Height="100" Margin="653,72,0,0" Grid.Row="2" VerticalAlignment="Top"/>
            <TextBox x:Name="textBox" Grid.Column="3" HorizontalAlignment="Left" Margin="810,108,0,0" Grid.Row="2" TextWrapping="Wrap" Text="url" VerticalAlignment="Top" Height="38" Width="212"/>
            <RepeatButton x:Name="repeatButton2" Content="rfrsh" Click="wfwee" Grid.Column="3" HorizontalAlignment="Left" Height="54" Margin="739,95,0,0" Grid.Row="2" VerticalAlignment="Top" Width="69"/>
        </Grid> <!--add drag and drop images from website-->

        <Grid x:Name="Output" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid x:Name="GridImageAndVCancs">
                <Image Stretch="Uniform" MaxHeight="400"  ImageOpened="Im1Iopen" Source="{Binding ImagePath}"></Image>
                <!-- Inking area -->
                <Canvas x:Name="InkingArea" Background="Transparent" Grid.Row="1" Grid.Column="0"
                    HorizontalAlignment="Center" VerticalAlignment="Center"
                    PointerExited="InkingArea_PointerExited"
                    PointerMoved="InkingArea_PointerMoved"
                    PointerPressed="InkingArea_PointerPressed"
                    PointerReleased="InkingArea_PointerReleased"
                    IsTapEnabled="False">
                    <Canvas.Clip>
                        <RectangleGeometry Rect="0,0,2032,2667"/>
                    </Canvas.Clip>
                    <Rectangle x:Name="SelectionRect" Fill="Transparent" Stroke="Transparent" 
                           Width="0" Height="0"
                           Margin="0,0,0,0"
                           Canvas.Left="0" Canvas.Top="0" Canvas.ZIndex="3"
                           ManipulationDelta="SelectionRect_ManipulationDelta"/>
                </Canvas>
            </Grid>
        </Grid>

        <!-- Add Storyboards to the visual states below as necessary for supporting the various layouts -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="DefaultLayout"/>
                <VisualState x:Name="Below768Layout"/>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
